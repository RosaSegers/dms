name: Log Saver CI

on:
  push:
    paths:
      - 'log-saver/**'
      - '.github/workflows/log-saver.yml'
  pull_request:
    paths:
      - 'log-saver/**'
      - '.github/workflows/log-saver.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $GITHUB_WORKSPACE/bin v1.56.2
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      - name: Run linter
        run: golangci-lint run ./...

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        run: |
          if [ "$(gofmt -l ./log-saver | wc -l)" -gt 0 ]; then
            echo "Code is not gofmt formatted"
            gofmt -d ./log-saver
            exit 1
          fi

  secrets:
    uses: ./.github/workflows/gitguardian.yml
    secrets:
      GG_SHIELD_API_KEY: ${{ secrets.GG_SHIELD_API_KEY }}
    with:
      base_branch: 'origin/main'

  build:
    runs-on: ubuntu-latest
    needs: [lint, format]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Build Go app
        run: |
          cd log-saver
          go build -v .

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Run tests
        run: |
          cd log-saver
          go test -v ./...

  docker:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker image
        run: docker build -t gyliana/log-saver:${{ github.sha }} -f log-saver/Dockerfile .
      - name: Push image with commit SHA
        run: docker push gyliana/log-saver:${{ github.sha }}
      - name: Tag & push latest image
        run: |
          docker tag gyliana/log-saver:${{ github.sha }} gyliana/log-saver:latest
          docker push gyliana/log-saver:latest

  snyk:
    uses: ./.github/workflows/snyk.yml
    needs: docker
    with:
      solution_path: log-saver
    secrets:
      snyk_token: ${{ secrets.SNYK_TOKEN }}
