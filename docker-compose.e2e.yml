version: "3.8"

services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: user-sqlserver
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "YourStrong!Password"
      ACCEPT_EULA: "Y"

  user-api:
    build:
      context: ./User
      dockerfile: Dockerfile
    container_name: user-api
    ports:
      - "5001:8080"
    environment:
      RabbitMQ__Host: "rabbitmq"
      RabbitMQ__Credentials__Username: "Guest"
      RabbitMQ__Credentials__Password: "Guest"
      ConnectionStrings__DefaultConnection: "Server=user-sqlserver;Initial Catalog=UserDb;Persist Security Info=False;User ID=sa;Password=YourStrong!Password;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=True;Connection Timeout=30;"
      Jwt__Key: "SuperSecretDebugKeyForTesting12345"
      Logging__LogLevel__Default: "Information"
      Logging__LogLevel__Microsoft.AspNetCore: "Warning"
      AllowedHosts: "*"
      Gateway: "http://api-gateway:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
      user-sqlserver:
        condition: service_started

  document.api:
    build:
      context: .
      dockerfile: Document/Document.API/Dockerfile
    container_name: document-api
    ports:
      - "5005:80"
    environment:
      RabbitMQ__Host: "rabbitmq"
      RabbitMQ__Credentials__Username: "Guest"
      RabbitMQ__Credentials__Password: "Guest"
      ASPNETCORE_ENVIRONMENT: "Test"
      ASPNETCORE_URLS: "http://+:80"
      Jwt__Key: "SuperSecretDebugKeyForTesting12345"
      Logging__LogLevel__Default: "Information"
      Logging__LogLevel__Microsoft.AspNetCore: "Warning"
      AllowedHosts: "*"
    depends_on:
      rabbitmq:
        condition: service_healthy


  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "5285:80"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
      user-api:
        condition: service_started

  document-frontend:
    build:
      context: ./DocumentFrontend
      dockerfile: Dockerfile
    container_name: document-frontend
    ports:
      - "8080:8080"
    environment:
      Gateway: "http://api-gateway:80"
    depends_on:
      api-gateway:
        condition: service_started
